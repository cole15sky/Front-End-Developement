May 8, Wednesday
16:46:31

-------------------------Intro_JS----------------------

         What is JavaScript?
Last year, millions of learners from the community started with JavaScript.
                Why?
 ------------> JavaScript is primarily known as the language of most modern web browsers, and its early quirks gave it a bit of a bad reputation. However, the language has continued to evolve and improve.
  JavaScript is a powerful, flexible, and fast programming language now being used for increasingly complex web development and beyond!

Since JavaScript remains at the core of web development, it’s often the first language learned by self-taught coders eager to learn and build. We’re excited for what you’ll be able to create with the JavaScript foundation you gain here.
 JavaScript powers the dynamic behavior on most websites, including this one.

Here  learning the introductory coding concepts including data types and built-in objects—essential knowledge for all aspiring developers will be explained. This foundation will set us up for understanding the more complex concepts we'll encounter later.


---------------------------Console--------------------------- 
The console is a panel that display important message,like errors,for developers.Much of the work the computer does with our code is invisible to us by default. If we want to see things appear on our screen, we can print, or log to our console directly.

In JavaScript, the console keyword refers to an object, a collection of data and actions, that we can use in our code. Keywords are words that are built into the JavaScript language, so the computer recognizes them and treats them specially.

One action, or method, that is built into the console object is the .log() method. When we write console.log() what we put inside the parentheses will get printed, or logged, to the console.
It’s going to be very useful for us to print values to the console, so we can see the work that we’re doing.

console.log(5); 

This example logs 5 to the console. The semicolon denotes the end of the line, or statement.
 Although in JavaScript our code will usually run as intended without a semicolon, I recommend learning the habit of ending each statement with a semicolon so I never leave one out in the few instances when they are required.

