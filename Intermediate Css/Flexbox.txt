Monday 13 May
13:53:21

----------------------------Flexbox-----------------------------------
CSS provides many tools and properties that we can use to position elements on a webpage.
wanted will learn about Flexible Box Layout or flexbox, a tool that greatly simplifies how to position elements.

There are two important components to a flexbox layout: flex containers and flex items. A flex container is an element on a page that contains flex items. All direct child elements of a flex container are flex items. This distinction is important because some of the properties you will learn in this lesson apply to flex containers while others apply to flex items.

To designate an element as a flex container, set the element’s display property to flex or inline-flex. Once an item is a flex container, there are several properties we can use to specify how its children behave. In this lesson we will cover these properties:

justify-content
align-items
flex-grow
flex-shrink
flex-basis
flex
flex-wrap
align-content
flex-direction
flex-flow
Flexbox is an elegant tool that makes it easy to address positioning issues that may have been difficult before.

------------------------Display flex-----------------------------------------

Any element can be a flex container. Flex containers are helpful tools for creating websites that respond to changes in screen sizes.
 Child elements of flex containers will change size and location in response to the size and position of their parent container.

For an element to become a flex container, its display property must be set to flex.

div.container {
  display: flex;
}

In the example above, all divs with the class container are flex containers. 
If they have children, the children are flex items. 
A div with the declaration display: flex; will remain block level — no other elements will appear on the same line as it.

However, it will change the behavior of its child elements. Child elements will not begin on new lines. 
Here we need to know how the flex display property impacts the positioning of child elements.
