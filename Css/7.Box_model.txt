May 3, 11:11:55
Friday

--------------------Introduction to box model-----------------------
browser load html elements with defult position values.This often leads to an unexpected and unwanted user experience while limiting the views you can create.

 we  have used HTML and CSS and  have unknowingly seen aspects of the box model. For example, if we have set the background color of an element, we may have noticed that the color was applied not only to the area directly behind the element but also to the area to the right of the element. Also, if we have aligned text, we know it is aligned relative to something. 
 What is that something?

[All elements on a web page are interpreted by the browser as “living” inside of a box. This is what is meant by the box model.]
For example, when we change the background color of an element, we change the background color of its entire box.
In this lesson, you’ll learn about the following aspects of the box model:

The dimensions of an element’s box.
The borders of an element’s box.
The paddings of an element’s box.
The margins of an element’s box.



---------------Height and width-------------------
An element's content has two dimensions ; A HEIHT & WIDTH. 
By default,the dimensions of am html box are set to hold the raw contents of the box.
p {
  height: 80px;
  width: 240px;
}

In this example, the height and width of paragraph elements are set to 80 pixels and 240 pixels, respectively — the px in the code above stands for pixels.

Pixels allow you to set the exact size of an element’s box (width and height). When the width and height of an element are set in pixels, it will be the same size on all devices — an element that fills a laptop screen will overflow a mobile screen.




----------------------Borders--------------------------
A border is a line that surrounds an element, like a frame around a painting. Borders can be set with a specific width, style, and color:

width—The thickness of the border. A border’s thickness can be set in pixels or with one of the following keywords: thin, medium, or thick.
style—The design of the border. Web browsers can render any of 10 different styles. Some of these styles include: none, dotted, and solid.
color—The color of the border. Web browsers can render colors using a few different formats, including 140 built-in color keywords.

p {
  border: 3px solid coral;
}

In the example above, the border has a width of 3 pixels, a style of solid, and a color of coral. All three properties are set in one line of code.

The default border is medium none color, where color is the current color of the element. If width, style, or color are not set in the CSS file, the web browser assigns the default value for that property.

p.content-header {
  height: 80px;
  width: 240px;
  border: solid coral;
}

In this example, the border style is set to solid and the color is set to coral. The width is not set, so it defaults to medium.




May 4, 11:17:52 
Saturday.

------------------Borders radius---------------
Ever since we noticed that the border highlights the true shape of an element's box square.
we can modify the corners of the element's border box with the border-radius property

 div.container{
    border: 3px solid blue;
    border-radius:5px;
 } 
  The code in the example above will set four corners of the border to radius of 5pixel (i.e the same curvature thayt a circle with  a radius of 5px would have

[Note:we can create a border that is perfectly circle by first creating an element with the same width with the same width and height ,and then setting the radius equal to half the width of the box,which is 50%.]


div.container{
    height:60px;
    width:60px;
    border:30px solid blue ;
    border radius: 50%;
}
The code in the example above creates a <div> that is a perfect circle.





----------------------Padding-----------------

The space between the contents of a box and the borders of a box is known as padding. Padding is like the space between a picture and the frame surrounding it. In CSS, we can modify this space with the padding property.

p.content-header {
  border: 3px solid coral;
  padding: 10px;
}

The code in this example puts 10 pixels of space between the content of the paragraph (the text) and the borders, on all four sides.
The padding property is often used to expand the background color and make the content look less cramped.
If we want to be more specific about the amount of padding on each side of a box’s content, you can use the following properties:

padding-top
padding-right
padding-bottom
padding-left
Each property affects the padding on only one side of the box’s content, giving us more flexibility in customization.

p.content-header {
  border: 3px solid fuchsia;
  padding-bottom: 10px;
}

In the example above, only the bottom side of the paragraph’s content will have a padding of 10 pixels.



--------------------Padding Shorthand---------------------

Another implementation of the padding property lets you specify exactly how much padding there should be on each side of the content in a single declaration. A declaration that uses multiple properties as values is known as a shorthand property.

Padding shorthand lets you specify all of the padding properties as values on a single line:

padding-top
padding-right
padding-bottom
padding-left
You can specify these properties in a few different ways:

4 Values
p.content-header {
  padding: 6px 11px 4px 9px;
}

In the example above, the four values 6px 11px 4px 9px correspond to the amount of padding on each side, in a clockwise rotation. In order, it specifies the padding-top value (6px), the padding-right value (11px), the padding-bottom value (4px), and the padding-left value (9px) of the content.

3 Values
p.content-header {
  padding: 5px 10px 20px;
}

If the left and right sides of the content can be equal, the padding shorthand property allows for 3 values to be specified. The first value sets the padding-top value (5px), the second value sets the padding-left and padding-right values (10px), and the third value sets the padding-bottom value (20px).

2 Values
p.content-header {
  padding: 5px 10px;
}

And finally, if the top and bottom sides can be equal, and the left and right sides can be equal, you can specify 2 values. The first value sets the padding-top and padding-bottom values (5px), and the second value sets the padding-left and padding-right values (10px).



----------------------Margin------------------------
The fourth and final component of the box model is margin.

Margin refers to the space directly outside of the box. The margin property is used to specify the size of this space.

p {
  border: 1px solid aquamarine;
  margin: 20px;
}

The code in the example above will place 20 pixels of space on the outside of the paragraph’s box on all four sides. This means that other HTML elements on the page cannot come within 20 pixels of the paragraph’s border.

If you want to be even more specific about the amount of margin on each side of a box, we can use the following properties:

margin-top
margin-right
margin-bottom
margin-left
Each property affects the margin on only one side of the box, providing more flexibility in customization.

p {
  border: 3px solid DarkSlateGrey;
  margin-right: 15px;
}

In the example above, only the right side of the paragraph’s box will have a margin of 15 pixels. It’s common to see margin values used for a specific side of an element.

